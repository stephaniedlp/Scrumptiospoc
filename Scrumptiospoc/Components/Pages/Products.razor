@page "/products"
@rendermode InteractiveServer
@using Scrumptiospoc.Interfaces;
@using Scrumptiospoc.Models;
@using System.Collections.ObjectModel
@inject IProductInterface _productservice;

<h1>Products</h1>
<p class="add-subtitle">Add Product <button class="btn-add" @onclick="AddProduct">+</button></p>
<hr />

@foreach (var item in ProductList)
{
    if (!item.IsDeleted)
    {
        <div class="product-row">
            <img class="foodlogos" src="@($"./img/{imgCounter}.png")" />
            <input type="text" @bind-value="@item.Name" @bind-value:event="onchange" />            
            <input type="text" @bind-value="@item.Description" @bind-value:event="onchange" />
            <button class="btn btn-primary " @onclick="()=>DeleteProduct(item)">Delete</button>
        </div>
        imgCounter++;
        if (imgCounter > 3) imgCounter = 1;
    }
}

@code {

    public ObservableCollection<Product> ProductList { get; set; }
    int imgCounter = 1;
    public void AddProduct()
    {
        _productservice.AddProduct();

    }

    public async Task DeleteProduct(Product product)
    {
        await _productservice.ArchiveProduct(product);
        StateHasChanged();
    }


    protected override async Task OnInitializedAsync()
    {
        ProductList = _productservice.GetAllProducts();

    }

}
